Ú
cD:\Tailieu\projectDoAn\Code\WhereHouse\Backend\PTDuc.WhereHouse\Utils\CustomJsonConverterForType.cs
	namespace		 	
PTDuc		
 
.		 

WhereHouse		 
.		 
Utils		  
{

 
public 

class &
CustomJsonConverterForType +
:, -
JsonConverter. ;
<; <
Type< @
>@ A
{ 
public 
override 
Type 
Read !
(! "
ref 
Utf8JsonReader 
reader %
,% &
Type 
typeToConvert 
, !
JsonSerializerOptions !
options" )
) 
{ 	
throw 
new !
NotSupportedException +
(+ ,
), -
;- .
} 	
public 
override 
void 
Write "
(" #
Utf8JsonWriter 
writer !
,! "
Type 
value 
, !
JsonSerializerOptions   !
options  " )
)!! 
{"" 	
string## !
assemblyQualifiedName## (
=##) *
value##+ 0
.##0 1!
AssemblyQualifiedName##1 F
;##F G
writer%% 
.%% 
WriteStringValue%% #
(%%# $!
assemblyQualifiedName%%$ 9
)%%9 :
;%%: ;
}&& 	
}'' 
}(( À
XD:\Tailieu\projectDoAn\Code\WhereHouse\Backend\PTDuc.WhereHouse\Utils\ExtensionMethod.cs
	namespace 	
PTDuc
 
. 

WhereHouse 
. 
Utils  
{ 
public		 

static		 
class		 
ExtensionMethod		 '
{

 
public 
static 
object 
GetValueByKey *
<* +
TEntity+ 2
>2 3
(3 4
this4 8
TEntity9 @
objA D
,D E
stringE K
keyL O
)O P
{ 	
return 
obj 
. 
GetType 
(  
)  !
.! "
GetProperty" -
(- .
key. 1
)1 2
.2 3
GetValue3 ;
(; <
obj< ?
)? @
;@ A
} 	
public 
static 
string #
ByteArrayToBase64String 4
(4 5
this5 9
byte: >
[> ?
]? @
	byteArrayA J
)J K
{ 	
return 
Convert 
. 
ToBase64String )
() *
	byteArray* 3
)3 4
;4 5
} 	
public 
static 
byte 
[ 
] #
Base64StringToByteArray 4
(4 5
this5 9
string: @
strA D
)D E
{ 	
return 
Convert 
. 
FromBase64String +
(+ ,
str, /
)/ 0
;0 1
} 	
} 
} áL
UD:\Tailieu\projectDoAn\Code\WhereHouse\Backend\PTDuc.WhereHouse\Utils\PasswordHash.cs
	namespace		 	
PTDuc		
 
.		 

WhereHouse		 
.		 
Utils		  
{

 
public 

class 
PasswordHash 
{ 
const 
int 
SaltSize 
= 
$num 
,  
HashSize! )
=* +
$num, .
,. /
HashIter0 8
=9 :
$num; @
;@ A
readonly 
byte 
[ 
] 
_salt 
, 
_hash $
;$ %
public 
PasswordHash 
( 
string "
password# +
)+ ,
{ 	
new $
RNGCryptoServiceProvider (
(( )
)) *
.* +
GetBytes+ 3
(3 4
_salt4 9
=: ;
new< ?
byte@ D
[D E
SaltSizeE M
]M N
)N O
;O P
_hash 
= 
new 
Rfc2898DeriveBytes *
(* +
password+ 3
,3 4
_salt5 :
,: ;
HashIter< D
)D E
.E F
GetBytesF N
(N O
HashSizeO W
)W X
;X Y
} 	
public 
PasswordHash 
( 
byte  
[  !
]! "
	hashBytes# ,
), -
{ 	
Array 
. 
Copy 
( 
	hashBytes  
,  !
$num" #
,# $
_salt% *
=+ ,
new- 0
byte1 5
[5 6
SaltSize6 >
]> ?
,? @
$numA B
,B C
SaltSizeD L
)L M
;M N
Array 
. 
Copy 
( 
	hashBytes  
,  !
SaltSize" *
,* +
_hash, 1
=2 3
new4 7
byte8 <
[< =
HashSize= E
]E F
,F G
$numH I
,I J
HashSizeK S
)S T
;T U
} 	
public 
PasswordHash 
( 
byte  
[  !
]! "
salt# '
,' (
byte) -
[- .
]. /
hash0 4
)4 5
{ 	
Array 
. 
Copy 
( 
salt 
, 
$num 
, 
_salt  %
=& '
new( +
byte, 0
[0 1
SaltSize1 9
]9 :
,: ;
$num< =
,= >
SaltSize? G
)G H
;H I
Array 
. 
Copy 
( 
hash 
, 
$num 
, 
_hash  %
=& '
new( +
byte, 0
[0 1
HashSize1 9
]9 :
,: ;
$num< =
,= >
HashSize? G
)G H
;H I
} 	
public 
byte 
[ 
] 
ToArray 
( 
byte "
[" #
]# $
	hashBytes% .
). /
{   	
	hashBytes!! 
=!! 
new!! 
byte!!  
[!!  !
SaltSize!!! )
+!!* +
HashSize!!, 4
]!!4 5
;!!5 6
Array"" 
."" 
Copy"" 
("" 
_salt"" 
,"" 
$num"" 
,""  
	hashBytes""! *
,""* +
$num"", -
,""- .
SaltSize""/ 7
)""7 8
;""8 9
Array## 
.## 
Copy## 
(## 
_hash## 
,## 
$num## 
,##  
	hashBytes##! *
,##* +
SaltSize##, 4
,##4 5
HashSize##6 >
)##> ?
;##? @
return$$ 
	hashBytes$$ 
;$$ 
}%% 	
public'' 
byte'' 
['' 
]'' 
ToArray'' 
('' 
)'' 
{(( 	
var)) 
	hashBytes)) 
=)) 
new)) 
byte))  $
[))$ %
SaltSize))% -
+)). /
HashSize))0 8
]))8 9
;))9 :
Array** 
.** 
Copy** 
(** 
_salt** 
,** 
$num** 
,**  
	hashBytes**! *
,*** +
$num**, -
,**- .
SaltSize**/ 7
)**7 8
;**8 9
Array++ 
.++ 
Copy++ 
(++ 
_hash++ 
,++ 
$num++ 
,++  
	hashBytes++! *
,++* +
SaltSize++, 4
,++4 5
HashSize++6 >
)++> ?
;++? @
return,, 
	hashBytes,, 
;,, 
}-- 	
public.. 
byte.. 
[.. 
].. 
Salt.. 
{.. 
get..  
{..! "
return..# )
(..* +
byte..+ /
[../ 0
]..0 1
)..1 2
_salt..2 7
...7 8
Clone..8 =
(..= >
)..> ?
;..? @
}..A B
}..C D
public// 
byte// 
[// 
]// 
Hash// 
{// 
get//  
{//! "
return//# )
(//* +
byte//+ /
[/// 0
]//0 1
)//1 2
_hash//2 7
.//7 8
Clone//8 =
(//= >
)//> ?
;//? @
}//A B
}//C D
public<< 
static<< 

LoginParam<<  
HashPassword<<! -
(<<- .
string<<. 4
password<<5 =
)<<= >
{== 	
var>> 
res>> 
=>> 
new>> 

LoginParam>> $
{>>% &
Password>>' /
=>>0 1
password>>2 :
}>>; <
;>>< =
byte@@ 
[@@ 
]@@ 
	hashBytes@@ 
=@@ 
new@@ "
byte@@# '
[@@' (
SaltSize@@( 0
+@@1 2
HashSize@@3 ;
]@@; <
;@@< =
varBB 
saltBB 
=BB 
newBB 
byteBB 
[BB  
SaltSizeBB  (
]BB( )
;BB) *
newDD $
RNGCryptoServiceProviderDD (
(DD( )
)DD) *
.DD* +
GetBytesDD+ 3
(DD3 4
saltDD4 8
)DD8 9
;DD9 :
resEE 
.EE 
SaltEE 
=EE 
saltEE 
.EE #
ByteArrayToBase64StringEE 3
(EE3 4
)EE4 5
;EE5 6
varGG 
hashGG 
=GG 
newGG 
Rfc2898DeriveBytesGG -
(GG- .
passwordGG. 6
,GG6 7
saltGG8 <
,GG< =
HashIterGG> F
)GGF G
.GGG H
GetBytesGGH P
(GGP Q
HashSizeGGQ Y
)GGY Z
;GGZ [
ArrayII 
.II 
CopyII 
(II 
saltII 
,II 
$numII 
,II 
	hashBytesII  )
,II) *
$numII+ ,
,II, -
SaltSizeII. 6
)II6 7
;II7 8
ArrayJJ 
.JJ 
CopyJJ 
(JJ 
hashJJ 
,JJ 
$numJJ 
,JJ 
	hashBytesJJ  )
,JJ) *
SaltSizeJJ+ 3
,JJ3 4
HashSizeJJ5 =
)JJ= >
;JJ> ?
resLL 
.LL 
HashPasswordLL 
=LL 
	hashBytesLL (
.LL( )#
ByteArrayToBase64StringLL) @
(LL@ A
)LLA B
;LLB C
;LLD E
returnNN 
resNN 
;NN 
}OO 	
publicQQ 
staticQQ 
boolQQ 
VerifyQQ !
(QQ! "

LoginParamQQ" ,
passwordQQ- 5
)QQ5 6
{RR 	
varSS 
saltByteSS 
=SS 
passwordSS #
.SS# $
SaltSS$ (
.SS( )#
Base64StringToByteArraySS) @
(SS@ A
)SSA B
;SSB C
varTT 
hashPassTT 
=TT 
passwordTT #
.TT# $
HashPasswordTT$ 0
.TT0 1#
Base64StringToByteArrayTT1 H
(TTH I
)TTI J
;TTJ K
varUU 
passUU 
=UU 
passwordUU 
.UU  
PasswordUU  (
;UU( )
byteVV 
[VV 
]VV 
testVV 
=VV 
newVV 
Rfc2898DeriveBytesVV 0
(VV0 1
passVV1 5
,VV5 6
saltByteVV7 ?
,VV? @
HashIterVVA I
)VVI J
.VVJ K
GetBytesVVK S
(VVS T
HashSizeVVT \
)VV\ ]
;VV] ^
forWW 
(WW 
intWW 
iWW 
=WW 
$numWW 
;WW 
iWW 
<WW 
HashSizeWW  (
;WW( )
iWW* +
++WW+ -
)WW- .
{XX 
ifYY 
(YY 
testYY 
[YY 
iYY 
]YY 
!=YY 
hashPassYY '
[YY' (
iYY( )
+YY* +
SaltSizeYY, 4
]YY4 5
)YY5 6
returnYY7 =
falseYY> C
;YYC D
}ZZ 
return\\ 
true\\ 
;\\ 
}]] 	
}^^ 
}__ ô
MD:\Tailieu\projectDoAn\Code\WhereHouse\Backend\PTDuc.WhereHouse\Utils\Util.cs
	namespace 	
PTDuc
 
. 

WhereHouse 
. 
Utils  
{ 
public 

static 
class 
Util 
{		 
public

 
static

 
T

 
Map

 
<

 
T

 
>

 
(

 
object

 %
objfrom

& -
,

- .
T

/ 0
objto

1 6
)

6 7
{ 	
var 
ToProperties 
= 
objto $
.$ %
GetType% ,
(, -
)- .
.. /
GetProperties/ <
(< =
)= >
;> ?
var 
FromProperties 
=  
objfrom! (
.( )
GetType) 0
(0 1
)1 2
.2 3
GetProperties3 @
(@ A
)A B
;B C
ToProperties 
. 
ToList 
(  
)  !
.! "
ForEach" )
() *
o* +
=>, .
{ 
var 
fromp 
= 
FromProperties *
.* +
FirstOrDefault+ 9
(9 :
x: ;
=>< >
x? @
.@ A
NameA E
==F H
oI J
.J K
NameK O
&&P R
xS T
.T U
PropertyTypeU a
==b d
oe f
.f g
PropertyTypeg s
)s t
;t u
if 
( 
fromp 
!= 
null !
)! "
{ 
o 
. 
SetValue 
( 
objto $
,$ %
fromp& +
.+ ,
GetValue, 4
(4 5
objfrom5 <
)< =
)= >
;> ?
} 
} 
) 
; 
return 
objto 
; 
} 	
} 
} 